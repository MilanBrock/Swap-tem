{
	"info": {
		"_postman_id": "43b71314-64e8-4f6b-af5d-afd4320d3293",
		"name": "Swap-tem Inventory management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24581680"
	},
	"item": [
		{
			"name": "Item Controller",
			"item": [
				{
					"name": "Post Item [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfull item POST (201) test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"ElGato\",\r\n    \"description\":\"Fiercest of them all.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Item [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid input (406) to item POST test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"ItemWithATitleThatExceedsTheNameLengthLimit\",\r\n    \"description\":\"Item description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Item {1} [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET request for Item1\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.name).to.eql(\"Penguino\");\r",
									"  pm.expect(responseJson.description).to.eql(\"Lives in the cold.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/items/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Item {-1} [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Non existent item (406) on item GET test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/items/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Item [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfull item update (202) to item PUT test\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"itemId\":1,\r\n    \"name\":\"Item1NEW\",\r\n    \"description\":\"ItemDesc1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Item [Invalid (Name)]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid input (406) to item PUT test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":1,\r\n    \"name\":\"Item1NEWNameIsNotValidBecauseItExceedsTheNameLengthLimit\",\r\n    \"description\":\"ItemDesc1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Item [Invalid (Id)]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid input (406) to item PUT test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":-1,\r\n    \"name\":\"ItemNewName\",\r\n    \"description\":\"ItemDesc1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Item {1} [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfull item deletion (202) to item DELETE test\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Item {-1} [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Non existent item (406) on item GET test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ItemCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"itemIds\":[1,4]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items/itemCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"itemCollection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Controller",
			"item": [
				{
					"name": "Register user [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfull user POST (201) test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"NewUsername\",\r\n    \"password\":\"NewUserPassword\",\r\n    \"currency\":250\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid input (406) to user POST test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"NewUsernameThatExceedsTheTwentyFiveCharacterLimit\",\r\n    \"password\":\"NewUserPassword\",\r\n    \"currency\":250\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User {1} [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET request for userid 1\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User {-1} [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Non existent user (406) on user GET test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfull user update (202) to user PUT test\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"MilanBrockNew\",\r\n    \"password\":\"NewSecret\",\r\n    \"currency\":999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User [Invalid (Username)]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid username input (406) to user PUT test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"MilanBrockNewButTheNameExceedsTheTwentyFiveCharacterLimit\",\r\n    \"password\":\"NewSecret\",\r\n    \"currency\":999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User {-1} [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Non existent user (406) on user DELETE test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User {3} [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User deletion accepted (202) on user DELETE test\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inventory Controller",
			"item": [
				{
					"name": "add item {3} to user {1} [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Item adding accepted (202) on inventory add test\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":1,\r\n    \"itemId\":3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/inventory/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inventory",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add item {5} to user {2} [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Items belongs to other user (406) on inventory add test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":2,\r\n    \"itemId\":5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/inventory/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inventory",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove item {4} from user {1} [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"item removal accepted (202) on inventory remove test\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":1,\r\n    \"itemId\":4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/inventory/remove",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inventory",
								"remove"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove item {6} from user {1} [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User does not own item (406) on inventory remove test\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":1,\r\n    \"itemId\":6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/inventory/remove",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inventory",
								"remove"
							]
						}
					},
					"response": []
				},
				{
					"name": "get inventory from user {1} [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"inventory accepted (200) on inventory get test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authentication",
								"value": "RestAPIUserId1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/inventory",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inventory"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication Controller",
			"item": [
				{
					"name": "Login user 1 [Valid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"authentication succesfull (200)\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"GatoLover\",\r\n    \"password\":\"Meow\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/authentication",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user 1 [Invalid]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"authentication unsuccessfull (406)\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"MilanBrock\",\r\n    \"password\":\"WrongPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/authentication",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"authentication"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 350ms\", () => {",
					"  pm.expect(pm.response.responseTime).to.be.below(350);",
					"});",
					""
				]
			}
		}
	]
}